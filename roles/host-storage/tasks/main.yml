# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Partition Oracle user mount devices
  parted:
    device: "{{ item.blk_device }}"
    number: 1
    state: present
    label: gpt
  when: "'mapper' not in item.blk_device"
  with_items:
    - "{{ oracle_user_data_mounts }}"
  tags: ora-mounts

# if variable ORA_DATA_MOUNTS_<hostname> defined with file for file system
# then the file systems mounted only for the particular server
# (if server has '-' in name variable should be defined with '_' instead of all '-' appearances
# for example if ORA_DATA_MOUNTS_linuxserver44=mounts44.json but install-oracle runs
# with --ora-data-mounts  mounts.json linuxserver44 host takes FS from mounts44.json
# but other servers have defined mounts.json if there is no file mounts44.json
# then FS taken from mounts.json as well
- name: Add filesystem on Oracle user mount LV devices
  filesystem:
    fstype: "{{ item.fstype }}"
    dev: "{{ item.blk_device }}{% if 'mapper' not in item.blk_device %}1{% endif %}"
  with_items:
    - "{% if lookup_file_host %}{{ lookup_file_host }}{% else %}{{ data_mounts_input }}{% endif %}"
  vars:
    env_var_host: "ORA_DATA_MOUNTS_{{ ansible_hostname|replace('-', '_') }}"
    var_host: "{{ lookup('env', env_var_host) }}"
    file_var_host: "{% if var_host %}{{ var_host }}{% else %}{{ data_mounts_definition_file }}{% endif %}"
    lookup_file_host: "{{ lookup('file', file_var_host, errors='ignore') }}"
  tags: ora-mounts

- name: Mount Oracle user mount raw devices
  mount:
    fstype: "{{ item.fstype }}"
    src: "{{ item.blk_device }}{% if 'mapper' not in item.blk_device %}1{% endif %}"
    path: "{{ item.mount_point }}"
    opts: "{{ item.mount_opts }}"
    state: mounted
  with_items:
    - "{% if lookup_file_host %}{{ lookup_file_host }}{% else %}{{ data_mounts_input }}{% endif %}"
  vars:
    env_var_host: "ORA_DATA_MOUNTS_{{ ansible_hostname|replace('-', '_') }}"
    var_host: "{{ lookup('env', env_var_host) }}"
    file_var_host: "{% if var_host %}{{ var_host }}{% else %}{{ data_mounts_definition_file }}{% endif %}"
    lookup_file_host: "{{ lookup('file', file_var_host, errors='ignore') }}"
  tags: ora-mounts
